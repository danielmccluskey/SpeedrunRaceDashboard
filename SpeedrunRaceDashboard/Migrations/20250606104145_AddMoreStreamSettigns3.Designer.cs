// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpeedrunRaceDashboard.Models;

#nullable disable

namespace SpeedrunRaceDashboard.Migrations
{
    [DbContext(typeof(RaceDbContext))]
    [Migration("20250606104145_AddMoreStreamSettigns3")]
    partial class AddMoreStreamSettigns3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("SpeedrunRaceDashboard.Models.StreamProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompletedTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PersonalBest")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TeamColour")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TwitchDisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TwitchUsername")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserDisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StreamProfiles");
                });

            modelBuilder.Entity("SpeedrunRaceDashboard.Models.StreamSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccentColour")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BackgroundColour")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BackgroundImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("CompactMode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomCSS")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FontFamily")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GoogleFontUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HeaderImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HeaderTextColour")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsTimerRunning")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MainBackgroundColour")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ShowCommentaryBox")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowFacts")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowLeaderboard")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowTeamBorders")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SidebarBackgroundColour")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SidebarImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SidebarTextColour")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StreamTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TimerStartedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("UseBackgroundImage")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UseHeaderImage")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("StreamSettings");
                });

            modelBuilder.Entity("SpeedrunRaceDashboard.Models.StreamSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Hidden")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Muted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Paused")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProfileId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowLoading")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeamColour")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ViewOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("StreamSlots");
                });

            modelBuilder.Entity("SpeedrunRaceDashboard.Models.StreamSlot", b =>
                {
                    b.HasOne("SpeedrunRaceDashboard.Models.StreamProfile", "Profile")
                        .WithMany("StreamSlots")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("SpeedrunRaceDashboard.Models.StreamProfile", b =>
                {
                    b.Navigation("StreamSlots");
                });
#pragma warning restore 612, 618
        }
    }
}
