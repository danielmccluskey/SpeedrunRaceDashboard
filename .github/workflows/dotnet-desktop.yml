name: Build and Release Blazor Server App

on:
  push:
    branches:
      - main

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.set_tag.outputs.new_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Calculate next tag
        id: set_tag
        run: |
          latest_tag=$(git tag --sort=-v:refname | head -n 1)
          if [ -z "$latest_tag" ]; then
            latest_tag="v1.2.0"
          fi
          echo "Latest tag: $latest_tag"
          
          version=$(echo $latest_tag | sed -E 's/v([0-9]+)\.([0-9]+)\.([0-9]+)/\1.\2.\3/')
          IFS='.' read -r major minor patch <<< "$version"
          
          patch=$((patch + 1))
          new_tag="v${major}.${minor}.${patch}"
          
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
          echo "New tag will be $new_tag"


      - name: Create tag and push
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag ${{ steps.set_tag.outputs.new_tag }}
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}
          git push origin ${{ steps.set_tag.outputs.new_tag }}


      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.set_tag.outputs.new_tag }}
          name: Release ${{ steps.set_tag.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rid: [win-x64, win-x86]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Publish Blazor Server app for ${{ matrix.rid }}
        run: |
          dotnet publish SpeedrunRaceDashboard/SpeedrunRaceDashboard.sln \
            -c Release \
            -r ${{ matrix.rid }} \
            --self-contained true \
            -o publish-${{ matrix.rid }}

      - name: Zip output for ${{ matrix.rid }}
        run: |
          cd publish-${{ matrix.rid }}
          zip -r ../srd-${{ matrix.rid }}.zip .
          cd ..

      - name: Upload release asset for ${{ matrix.rid }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.prepare.outputs.new_tag }}
          files: srd-${{ matrix.rid }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
